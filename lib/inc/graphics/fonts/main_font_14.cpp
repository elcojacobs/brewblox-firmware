/*******************************************************************************
 * Size: 14 px
 * Bpp: 4
 * Opts: --no-compress --no-prefilter --bpp 4 --size 14 --font Roboto-Medium.ttf -r 0x20-0x7F,0xB0,0x2022 --font MaterialIcons-Regular.ttf -r 0xe1ba,0xe1da,0xe328 --format lvgl -o main_font_14.cpp --force-fast-kern-format
 ******************************************************************************/

#ifdef LV_LVGL_H_INCLUDE_SIMPLE
#include "lvgl.h"
#else
#include "lvgl/lvgl.h"
#endif

#ifndef MAIN_FONT_14
#define MAIN_FONT_14 1
#endif

#if MAIN_FONT_14

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
    /* U+0020 " " */

    /* U+0021 "!" */
    0xf, 0xc0, 0xfb, 0xe, 0xb0, 0xeb, 0xe, 0xa0,
    0xda, 0xd, 0xa0, 0x64, 0x0, 0x0, 0xb8, 0xc,
    0xa0,

    /* U+0022 "\"" */
    0x5e, 0x4f, 0x5d, 0x4e, 0x5b, 0x4c, 0x48, 0x39,

    /* U+0023 "#" */
    0x0, 0x8, 0xa0, 0xd4, 0x0, 0x0, 0xb7, 0xf,
    0x10, 0x0, 0xd, 0x43, 0xf0, 0x0, 0xdf, 0xff,
    0xff, 0xf4, 0x2, 0x5e, 0x29, 0xa2, 0x0, 0x5,
    0xc0, 0xa7, 0x0, 0x0, 0x7a, 0xc, 0x50, 0x5,
    0xff, 0xff, 0xff, 0xb0, 0x2, 0xd6, 0x4f, 0x21,
    0x0, 0xf, 0x25, 0xc0, 0x0, 0x3, 0xf0, 0x89,
    0x0, 0x0,

    /* U+0024 "$" */
    0x0, 0x6, 0xb0, 0x0, 0x0, 0x19, 0xd2, 0x0,
    0x3, 0xef, 0xff, 0x50, 0xb, 0xf3, 0x2d, 0xe0,
    0xe, 0xc0, 0x8, 0xf2, 0xc, 0xf2, 0x0, 0x0,
    0x4, 0xff, 0xa2, 0x0, 0x0, 0x2a, 0xff, 0x60,
    0x0, 0x0, 0x2d, 0xf1, 0x3c, 0x50, 0x7, 0xf3,
    0x1f, 0xb0, 0xa, 0xf1, 0x8, 0xfe, 0xef, 0x90,
    0x0, 0x4c, 0xc5, 0x0, 0x0, 0x8, 0x90, 0x0,

    /* U+0025 "%" */
    0x8, 0xed, 0x20, 0x0, 0x0, 0x2f, 0x28, 0xb0,
    0x19, 0x0, 0x5d, 0x4, 0xe0, 0xa8, 0x0, 0x3f,
    0x17, 0xc3, 0xe0, 0x0, 0x9, 0xfe, 0x4c, 0x50,
    0x0, 0x0, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0,
    0xe3, 0x9e, 0xa1, 0x0, 0x8, 0x96, 0xd3, 0xc8,
    0x0, 0x2e, 0x18, 0xa0, 0x7a, 0x0, 0x77, 0x6,
    0xd1, 0xb8, 0x0, 0x0, 0x0, 0xaf, 0xc1,

    /* U+0026 "&" */
    0x0, 0x7e, 0xe7, 0x0, 0x0, 0x4f, 0xa9, 0xf4,
    0x0, 0x8, 0xf0, 0xf, 0x70, 0x0, 0x7f, 0x35,
    0xf4, 0x0, 0x1, 0xfe, 0xf9, 0x0, 0x0, 0x1c,
    0xfb, 0x0, 0x0, 0xc, 0xfb, 0xf5, 0x3f, 0x35,
    0xf6, 0xd, 0xf9, 0xf1, 0x5f, 0x50, 0x2e, 0xfb,
    0x1, 0xed, 0x56, 0xef, 0xb0, 0x3, 0xbf, 0xea,
    0x9f, 0x70,

    /* U+0027 "'" */
    0x7d, 0x7c, 0x7b, 0x57,

    /* U+0028 "(" */
    0x0, 0x4, 0x50, 0x3, 0xf5, 0x0, 0xd9, 0x0,
    0x5f, 0x10, 0xa, 0xc0, 0x0, 0xe9, 0x0, 0xf,
    0x70, 0x1, 0xf6, 0x0, 0x1f, 0x60, 0x0, 0xf8,
    0x0, 0xc, 0xa0, 0x0, 0x8e, 0x0, 0x2, 0xf4,
    0x0, 0x9, 0xd0, 0x0, 0xb, 0x70, 0x0, 0x1,

    /* U+0029 ")" */
    0x63, 0x0, 0x6, 0xe2, 0x0, 0xb, 0xb0, 0x0,
    0x3f, 0x30, 0x0, 0xe9, 0x0, 0xb, 0xd0, 0x0,
    0x9f, 0x0, 0x8, 0xf0, 0x0, 0x8f, 0x0, 0x9,
    0xe0, 0x0, 0xcb, 0x0, 0xf, 0x60, 0x6, 0xf1,
    0x1, 0xe7, 0x0, 0x9a, 0x0, 0x1, 0x0, 0x0,

    /* U+002A "*" */
    0x0, 0x7b, 0x0, 0x2, 0x6, 0xa0, 0x10, 0xae,
    0xcd, 0xce, 0x0, 0x4f, 0xf7, 0x10, 0x6, 0xdc,
    0x90, 0x0, 0xd4, 0x2f, 0x10, 0x0, 0x0, 0x10,
    0x0,

    /* U+002B "+" */
    0x0, 0xa, 0x70, 0x0, 0x0, 0xe, 0xb0, 0x0,
    0x0, 0xe, 0xb0, 0x0, 0x59, 0x9f, 0xe9, 0x92,
    0x8f, 0xff, 0xff, 0xf4, 0x0, 0xe, 0xb0, 0x0,
    0x0, 0xe, 0xb0, 0x0, 0x0, 0xe, 0xb0, 0x0,

    /* U+002C "," */
    0x1f, 0x62, 0xf5, 0x5f, 0x28, 0x90, 0x0, 0x0,

    /* U+002D "-" */
    0x12, 0x22, 0x8, 0xff, 0xf1, 0x24, 0x44, 0x0,

    /* U+002E "." */
    0xc, 0x90, 0xda,

    /* U+002F "/" */
    0x0, 0x3, 0xf1, 0x0, 0x9, 0xb0, 0x0, 0xe,
    0x60, 0x0, 0x4f, 0x10, 0x0, 0x9b, 0x0, 0x0,
    0xe5, 0x0, 0x4, 0xf0, 0x0, 0x9, 0xa0, 0x0,
    0xe, 0x50, 0x0, 0x4f, 0x0, 0x0, 0xaa, 0x0,
    0x0, 0x73, 0x0, 0x0,

    /* U+0030 "0" */
    0x1, 0xaf, 0xfa, 0x0, 0xa, 0xf8, 0x9f, 0x90,
    0xf, 0xa0, 0xb, 0xf0, 0x3f, 0x60, 0x7, 0xf2,
    0x4f, 0x60, 0x6, 0xf3, 0x4f, 0x60, 0x6, 0xf3,
    0x4f, 0x60, 0x6, 0xf3, 0x3f, 0x70, 0x7, 0xf2,
    0xf, 0xa0, 0xb, 0xf0, 0xa, 0xf8, 0x9f, 0x90,
    0x0, 0xaf, 0xf9, 0x0,

    /* U+0031 "1" */
    0x0, 0x6c, 0x38, 0xef, 0xf4, 0xc9, 0x9f, 0x40,
    0x6, 0xf4, 0x0, 0x6f, 0x40, 0x6, 0xf4, 0x0,
    0x6f, 0x40, 0x6, 0xf4, 0x0, 0x6f, 0x40, 0x6,
    0xf4, 0x0, 0x6f, 0x40,

    /* U+0032 "2" */
    0x2, 0xbf, 0xe9, 0x10, 0xd, 0xf8, 0x9f, 0xa0,
    0x5f, 0x60, 0xb, 0xf0, 0x37, 0x10, 0xa, 0xf0,
    0x0, 0x0, 0x1f, 0xb0, 0x0, 0x0, 0xbf, 0x20,
    0x0, 0x8, 0xf6, 0x0, 0x0, 0x5f, 0x90, 0x0,
    0x3, 0xfb, 0x0, 0x0, 0x1e, 0xf7, 0x66, 0x62,
    0x4f, 0xff, 0xff, 0xf7,

    /* U+0033 "3" */
    0x2, 0xbf, 0xe8, 0x0, 0xe, 0xe7, 0x9f, 0x80,
    0x4f, 0x60, 0xc, 0xe0, 0x0, 0x0, 0xb, 0xf0,
    0x0, 0x1, 0x5f, 0x80, 0x0, 0x5f, 0xfd, 0x0,
    0x0, 0x14, 0x7f, 0xa0, 0x0, 0x0, 0x9, 0xf1,
    0x5e, 0x40, 0xa, 0xf0, 0x1f, 0xe7, 0x9f, 0xa0,
    0x3, 0xbf, 0xe9, 0x0,

    /* U+0034 "4" */
    0x0, 0x0, 0xaf, 0x50, 0x0, 0x3, 0xff, 0x50,
    0x0, 0xd, 0xef, 0x50, 0x0, 0x6f, 0x6f, 0x50,
    0x1, 0xe7, 0x4f, 0x50, 0x9, 0xd0, 0x4f, 0x50,
    0x3f, 0x61, 0x5f, 0x61, 0x9f, 0xff, 0xff, 0xf9,
    0x24, 0x44, 0x8f, 0x82, 0x0, 0x0, 0x4f, 0x50,
    0x0, 0x0, 0x4f, 0x50,

    /* U+0035 "5" */
    0x5, 0xff, 0xff, 0xf1, 0x6, 0xf9, 0x88, 0x80,
    0x8, 0xf0, 0x0, 0x0, 0x9, 0xe0, 0x10, 0x0,
    0xb, 0xfe, 0xfd, 0x30, 0x8, 0xc6, 0x6e, 0xe0,
    0x0, 0x0, 0x7, 0xf4, 0x0, 0x0, 0x4, 0xf5,
    0xf, 0xa0, 0x7, 0xf3, 0xa, 0xf8, 0x8f, 0xd0,
    0x0, 0x9e, 0xeb, 0x10,

    /* U+0036 "6" */
    0x0, 0x8, 0xde, 0x0, 0x0, 0xcf, 0xb7, 0x0,
    0x7, 0xf6, 0x0, 0x0, 0xd, 0xc0, 0x0, 0x0,
    0x1f, 0xcd, 0xfe, 0x30, 0x2f, 0xf7, 0x6e, 0xe0,
    0x3f, 0x80, 0x7, 0xf4, 0x1f, 0x80, 0x4, 0xf5,
    0xe, 0xc0, 0x7, 0xf3, 0x6, 0xfa, 0x8f, 0xc0,
    0x0, 0x7e, 0xea, 0x10,

    /* U+0037 "7" */
    0x8f, 0xff, 0xff, 0xf5, 0x36, 0x66, 0x6b, 0xf2,
    0x0, 0x0, 0xd, 0xc0, 0x0, 0x0, 0x3f, 0x50,
    0x0, 0x0, 0xae, 0x0, 0x0, 0x1, 0xf9, 0x0,
    0x0, 0x7, 0xf2, 0x0, 0x0, 0xe, 0xc0, 0x0,
    0x0, 0x5f, 0x60, 0x0, 0x0, 0xbf, 0x0, 0x0,
    0x2, 0xf9, 0x0, 0x0,

    /* U+0038 "8" */
    0x1, 0xae, 0xe9, 0x0, 0xa, 0xf9, 0x9f, 0x90,
    0xf, 0xb0, 0xc, 0xe0, 0xf, 0xa0, 0xb, 0xf0,
    0xb, 0xf4, 0x4f, 0xa0, 0x1, 0xef, 0xfe, 0x10,
    0xb, 0xe6, 0x6f, 0xa0, 0x3f, 0x70, 0x8, 0xf2,
    0x3f, 0x70, 0x8, 0xf2, 0xd, 0xf8, 0x8f, 0xd0,
    0x2, 0xbe, 0xea, 0x20,

    /* U+0039 "9" */
    0x1, 0xaf, 0xe7, 0x0, 0xc, 0xf8, 0xbf, 0x50,
    0x2f, 0x80, 0xd, 0xc0, 0x5f, 0x50, 0x9, 0xf0,
    0x4f, 0x60, 0x8, 0xf1, 0xe, 0xd3, 0x4f, 0xf1,
    0x5, 0xff, 0xfd, 0xf0, 0x0, 0x13, 0xc, 0xd0,
    0x0, 0x0, 0x4f, 0x70, 0x0, 0x7a, 0xfc, 0x0,
    0x0, 0xed, 0x80, 0x0,

    /* U+003A ":" */
    0xd, 0x90, 0xd9, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0xc, 0x90, 0xda,

    /* U+003B ";" */
    0x1e, 0x71, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x8, 0x40, 0xf7, 0x1f, 0x66, 0xe1, 0x23,
    0x0,

    /* U+003C "<" */
    0x0, 0x0, 0x3b, 0x20, 0x4, 0xbf, 0xf1, 0x3c,
    0xfd, 0x71, 0x9, 0xfa, 0x10, 0x0, 0x29, 0xff,
    0x93, 0x0, 0x1, 0x8f, 0xf2, 0x0, 0x0, 0x18,
    0x10,

    /* U+003D "=" */
    0x2, 0x22, 0x22, 0x20, 0xff, 0xff, 0xfe, 0x5,
    0x55, 0x55, 0x40, 0x22, 0x22, 0x22, 0xf, 0xff,
    0xff, 0xe0, 0x55, 0x55, 0x54,

    /* U+003E ">" */
    0x1b, 0x40, 0x0, 0x1, 0xff, 0xc5, 0x0, 0x0,
    0x5c, 0xfd, 0x50, 0x0, 0x8, 0xfc, 0x2, 0x9f,
    0xfa, 0x31, 0xff, 0x92, 0x0, 0x18, 0x10, 0x0,
    0x0,

    /* U+003F "?" */
    0x6, 0xdf, 0xc3, 0x3, 0xfc, 0x8e, 0xe0, 0x6d,
    0x20, 0x7f, 0x30, 0x0, 0x8, 0xf3, 0x0, 0x3,
    0xfc, 0x0, 0x1, 0xee, 0x10, 0x0, 0x7f, 0x30,
    0x0, 0x7, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x7, 0xc0, 0x0, 0x0, 0x8e, 0x0, 0x0,

    /* U+0040 "@" */
    0x0, 0x1, 0x8d, 0xfe, 0xa2, 0x0, 0x0, 0x2e,
    0xb4, 0x12, 0x8e, 0x40, 0x0, 0xd8, 0x0, 0x0,
    0x4, 0xe0, 0x7, 0xd0, 0x8, 0xed, 0x50, 0xa6,
    0xd, 0x60, 0x6e, 0x4a, 0xb0, 0x5b, 0x1f, 0x10,
    0xe7, 0x9, 0xa0, 0x3d, 0x3f, 0x2, 0xf2, 0xa,
    0x90, 0x2e, 0x4e, 0x4, 0xf0, 0xb, 0x70, 0x3c,
    0x3f, 0x4, 0xf0, 0xd, 0x60, 0x6a, 0x1f, 0x11,
    0xf5, 0x5f, 0x92, 0xe3, 0xd, 0x60, 0x7f, 0xb4,
    0xee, 0x70, 0x5, 0xe2, 0x0, 0x0, 0x0, 0x0,
    0x0, 0xae, 0x73, 0x24, 0x40, 0x0, 0x0, 0x5,
    0xce, 0xfc, 0x50, 0x0,

    /* U+0041 "A" */
    0x0, 0x4, 0xf9, 0x0, 0x0, 0x0, 0xa, 0xfe,
    0x0, 0x0, 0x0, 0xf, 0xdf, 0x40, 0x0, 0x0,
    0x4f, 0x4f, 0xa0, 0x0, 0x0, 0xaf, 0xa, 0xf0,
    0x0, 0x0, 0xfa, 0x5, 0xf5, 0x0, 0x5, 0xf7,
    0x23, 0xfa, 0x0, 0xa, 0xff, 0xff, 0xff, 0x0,
    0xf, 0xc5, 0x55, 0x8f, 0x50, 0x5f, 0x60, 0x0,
    0x1f, 0xb0, 0xbf, 0x10, 0x0, 0xc, 0xf0,

    /* U+0042 "B" */
    0xff, 0xff, 0xd7, 0x0, 0xfd, 0x78, 0xcf, 0x70,
    0xfb, 0x0, 0xf, 0xc0, 0xfb, 0x0, 0xe, 0xd0,
    0xfc, 0x11, 0x7f, 0x70, 0xff, 0xff, 0xfc, 0x0,
    0xfc, 0x44, 0x7f, 0xa0, 0xfb, 0x0, 0xa, 0xf0,
    0xfb, 0x0, 0xc, 0xf0, 0xfd, 0x77, 0xaf, 0xb0,
    0xff, 0xff, 0xe9, 0x10,

    /* U+0043 "C" */
    0x0, 0x3c, 0xfe, 0x91, 0x0, 0x3f, 0xe8, 0xaf,
    0xc0, 0xc, 0xf1, 0x0, 0x7f, 0x51, 0xfa, 0x0,
    0x2, 0xb5, 0x3f, 0x70, 0x0, 0x0, 0x4, 0xf7,
    0x0, 0x0, 0x0, 0x4f, 0x70, 0x0, 0x0, 0x2,
    0xf9, 0x0, 0x1, 0x95, 0xd, 0xe1, 0x0, 0x7f,
    0x50, 0x4f, 0xd8, 0xaf, 0xc0, 0x0, 0x4c, 0xfe,
    0x91, 0x0,

    /* U+0044 "D" */
    0xff, 0xfe, 0xb2, 0x0, 0xfd, 0x79, 0xef, 0x30,
    0xfb, 0x0, 0x1e, 0xd0, 0xfb, 0x0, 0x8, 0xf3,
    0xfb, 0x0, 0x6, 0xf5, 0xfb, 0x0, 0x4, 0xf6,
    0xfb, 0x0, 0x6, 0xf5, 0xfb, 0x0, 0x9, 0xf3,
    0xfb, 0x0, 0x2f, 0xd0, 0xfd, 0x79, 0xef, 0x30,
    0xff, 0xfe, 0xa3, 0x0,

    /* U+0045 "E" */
    0xff, 0xff, 0xff, 0x7f, 0xd7, 0x77, 0x73, 0xfb,
    0x0, 0x0, 0xf, 0xb0, 0x0, 0x0, 0xfc, 0x22,
    0x21, 0xf, 0xff, 0xff, 0xd0, 0xfd, 0x55, 0x54,
    0xf, 0xb0, 0x0, 0x0, 0xfb, 0x0, 0x0, 0xf,
    0xd7, 0x77, 0x73, 0xff, 0xff, 0xff, 0x80,

    /* U+0046 "F" */
    0xff, 0xff, 0xff, 0x5f, 0xd7, 0x77, 0x72, 0xfb,
    0x0, 0x0, 0xf, 0xb0, 0x0, 0x0, 0xfc, 0x22,
    0x21, 0xf, 0xff, 0xff, 0xc0, 0xfd, 0x55, 0x53,
    0xf, 0xb0, 0x0, 0x0, 0xfb, 0x0, 0x0, 0xf,
    0xb0, 0x0, 0x0, 0xfb, 0x0, 0x0, 0x0,

    /* U+0047 "G" */
    0x0, 0x4c, 0xfe, 0x91, 0x0, 0x4f, 0xe8, 0x9f,
    0xc0, 0xd, 0xf1, 0x0, 0x7f, 0x51, 0xfa, 0x0,
    0x1, 0xb6, 0x3f, 0x80, 0x0, 0x0, 0x4, 0xf7,
    0x0, 0x11, 0x10, 0x3f, 0x80, 0x2f, 0xff, 0xa1,
    0xfb, 0x0, 0x45, 0xfa, 0xc, 0xf2, 0x0, 0x1f,
    0xa0, 0x3f, 0xf9, 0x8c, 0xf8, 0x0, 0x3b, 0xff,
    0xc6, 0x0,

    /* U+0048 "H" */
    0xfb, 0x0, 0x0, 0xde, 0xfb, 0x0, 0x0, 0xde,
    0xfb, 0x0, 0x0, 0xde, 0xfb, 0x0, 0x0, 0xde,
    0xfc, 0x22, 0x22, 0xde, 0xff, 0xff, 0xff, 0xfe,
    0xfd, 0x55, 0x55, 0xde, 0xfb, 0x0, 0x0, 0xde,
    0xfb, 0x0, 0x0, 0xde, 0xfb, 0x0, 0x0, 0xde,
    0xfb, 0x0, 0x0, 0xde,

    /* U+0049 "I" */
    0xed, 0xed, 0xed, 0xed, 0xed, 0xed, 0xed, 0xed,
    0xed, 0xed, 0xed,

    /* U+004A "J" */
    0x0, 0x0, 0xe, 0xd0, 0x0, 0x0, 0xed, 0x0,
    0x0, 0xe, 0xd0, 0x0, 0x0, 0xed, 0x0, 0x0,
    0xe, 0xd0, 0x0, 0x0, 0xed, 0x0, 0x0, 0xe,
    0xd2, 0x30, 0x0, 0xec, 0x9f, 0x20, 0x1f, 0xa4,
    0xfd, 0x8d, 0xf4, 0x5, 0xdf, 0xd5, 0x0,

    /* U+004B "K" */
    0xfb, 0x0, 0xc, 0xf5, 0xfb, 0x0, 0x8f, 0x90,
    0xfb, 0x4, 0xfc, 0x0, 0xfb, 0x1e, 0xe1, 0x0,
    0xfb, 0xcf, 0x40, 0x0, 0xff, 0xff, 0x60, 0x0,
    0xff, 0xbe, 0xf1, 0x0, 0xfd, 0x5, 0xfa, 0x0,
    0xfb, 0x0, 0xbf, 0x50, 0xfb, 0x0, 0x2f, 0xe0,
    0xfb, 0x0, 0x7, 0xf9,

    /* U+004C "L" */
    0xfb, 0x0, 0x0, 0xf, 0xb0, 0x0, 0x0, 0xfb,
    0x0, 0x0, 0xf, 0xb0, 0x0, 0x0, 0xfb, 0x0,
    0x0, 0xf, 0xb0, 0x0, 0x0, 0xfb, 0x0, 0x0,
    0xf, 0xb0, 0x0, 0x0, 0xfb, 0x0, 0x0, 0xf,
    0xd7, 0x77, 0x71, 0xff, 0xff, 0xff, 0x40,

    /* U+004D "M" */
    0xff, 0x60, 0x0, 0x2, 0xff, 0x3f, 0xfc, 0x0,
    0x0, 0x8f, 0xf3, 0xff, 0xf1, 0x0, 0xd, 0xff,
    0x3f, 0xbf, 0x70, 0x3, 0xfb, 0xf3, 0xfa, 0xcc,
    0x0, 0x8f, 0x6f, 0x3f, 0xa6, 0xf2, 0xe, 0xa6,
    0xf3, 0xfb, 0x1f, 0x73, 0xf4, 0x7f, 0x3f, 0xb0,
    0xbc, 0x8e, 0x7, 0xf3, 0xfb, 0x5, 0xfe, 0x90,
    0x8f, 0x3f, 0xb0, 0xf, 0xf4, 0x8, 0xf3, 0xfb,
    0x0, 0xae, 0x0, 0x8f, 0x30,

    /* U+004E "N" */
    0xfe, 0x10, 0x0, 0xde, 0xff, 0x90, 0x0, 0xde,
    0xff, 0xf2, 0x0, 0xde, 0xfd, 0xfb, 0x0, 0xde,
    0xfb, 0x8f, 0x40, 0xde, 0xfb, 0xe, 0xd0, 0xde,
    0xfb, 0x6, 0xf6, 0xde, 0xfb, 0x0, 0xde, 0xee,
    0xfb, 0x0, 0x4f, 0xfe, 0xfb, 0x0, 0xa, 0xfe,
    0xfb, 0x0, 0x2, 0xfe,

    /* U+004F "O" */
    0x0, 0x3b, 0xfe, 0x91, 0x0, 0x3f, 0xe9, 0xbf,
    0xc0, 0xc, 0xf2, 0x0, 0x7f, 0x61, 0xfa, 0x0,
    0x0, 0xfb, 0x3f, 0x70, 0x0, 0xd, 0xe4, 0xf6,
    0x0, 0x0, 0xcf, 0x3f, 0x70, 0x0, 0xd, 0xe1,
    0xfa, 0x0, 0x0, 0xfb, 0xc, 0xf2, 0x0, 0x7f,
    0x60, 0x3f, 0xe9, 0xaf, 0xd0, 0x0, 0x3b, 0xfe,
    0x91, 0x0,

    /* U+0050 "P" */
    0xff, 0xff, 0xea, 0x10, 0xfd, 0x88, 0xaf, 0xc0,
    0xfb, 0x0, 0x9, 0xf3, 0xfb, 0x0, 0x5, 0xf6,
    0xfb, 0x0, 0x6, 0xf5, 0xfc, 0x22, 0x4e, 0xf1,
    0xff, 0xff, 0xfe, 0x40, 0xfd, 0x55, 0x30, 0x0,
    0xfb, 0x0, 0x0, 0x0, 0xfb, 0x0, 0x0, 0x0,
    0xfb, 0x0, 0x0, 0x0,

    /* U+0051 "Q" */
    0x0, 0x3c, 0xfe, 0x90, 0x0, 0x3f, 0xe9, 0xbf,
    0xc0, 0xc, 0xf2, 0x0, 0x8f, 0x62, 0xfa, 0x0,
    0x1, 0xfb, 0x4f, 0x70, 0x0, 0xe, 0xd5, 0xf6,
    0x0, 0x0, 0xde, 0x4f, 0x70, 0x0, 0xe, 0xd2,
    0xfa, 0x0, 0x0, 0xfb, 0xd, 0xf2, 0x0, 0x7f,
    0x60, 0x3f, 0xe9, 0xaf, 0xc0, 0x0, 0x3c, 0xff,
    0xf9, 0x0, 0x0, 0x0, 0x9, 0xf9, 0x0, 0x0,
    0x0, 0x6, 0x20,

    /* U+0052 "R" */
    0xff, 0xff, 0xd7, 0x0, 0xfd, 0x88, 0xcf, 0x80,
    0xfb, 0x0, 0xd, 0xe0, 0xfb, 0x0, 0xa, 0xf1,
    0xfb, 0x0, 0xc, 0xf0, 0xfc, 0x22, 0x7f, 0xa0,
    0xff, 0xff, 0xfc, 0x10, 0xfd, 0x56, 0xf9, 0x0,
    0xfb, 0x0, 0xbf, 0x20, 0xfb, 0x0, 0x2f, 0xb0,
    0xfb, 0x0, 0x9, 0xf3,

    /* U+0053 "S" */
    0x0, 0x8d, 0xfd, 0x50, 0xb, 0xfa, 0x8c, 0xf5,
    0x1f, 0xa0, 0x0, 0xed, 0x1f, 0xb0, 0x0, 0x33,
    0xb, 0xfc, 0x60, 0x0, 0x0, 0x8f, 0xff, 0x70,
    0x0, 0x1, 0x6d, 0xf7, 0x25, 0x10, 0x0, 0xed,
    0x5f, 0x70, 0x0, 0xdd, 0xd, 0xf9, 0x7b, 0xf8,
    0x1, 0x9e, 0xfd, 0x70,

    /* U+0054 "T" */
    0xbf, 0xff, 0xff, 0xff, 0x35, 0x77, 0xcf, 0x87,
    0x71, 0x0, 0x9, 0xf1, 0x0, 0x0, 0x0, 0x9f,
    0x10, 0x0, 0x0, 0x9, 0xf1, 0x0, 0x0, 0x0,
    0x9f, 0x10, 0x0, 0x0, 0x9, 0xf1, 0x0, 0x0,
    0x0, 0x9f, 0x10, 0x0, 0x0, 0x9, 0xf1, 0x0,
    0x0, 0x0, 0x9f, 0x10, 0x0, 0x0, 0x9, 0xf1,
    0x0, 0x0,

    /* U+0055 "U" */
    0x2f, 0x90, 0x0, 0x7f, 0x42, 0xf9, 0x0, 0x7,
    0xf4, 0x2f, 0x90, 0x0, 0x7f, 0x42, 0xf9, 0x0,
    0x7, 0xf4, 0x2f, 0x90, 0x0, 0x7f, 0x42, 0xf9,
    0x0, 0x7, 0xf4, 0x2f, 0x90, 0x0, 0x7f, 0x41,
    0xf9, 0x0, 0x7, 0xf4, 0xe, 0xd0, 0x0, 0xbf,
    0x10, 0x7f, 0xc8, 0xbf, 0xa0, 0x0, 0x6d, 0xfd,
    0x70, 0x0,

    /* U+0056 "V" */
    0xbf, 0x20, 0x0, 0x1f, 0xc6, 0xf7, 0x0, 0x6,
    0xf7, 0x1f, 0xc0, 0x0, 0xbf, 0x20, 0xbf, 0x10,
    0xf, 0xc0, 0x6, 0xf5, 0x5, 0xf7, 0x0, 0x1f,
    0xa0, 0xaf, 0x20, 0x0, 0xcf, 0xe, 0xd0, 0x0,
    0x7, 0xf8, 0xf8, 0x0, 0x0, 0x2f, 0xff, 0x20,
    0x0, 0x0, 0xcf, 0xd0, 0x0, 0x0, 0x7, 0xf8,
    0x0, 0x0,

    /* U+0057 "W" */
    0x9f, 0x20, 0xa, 0xf1, 0x0, 0xcf, 0x5, 0xf5,
    0x0, 0xdf, 0x40, 0xf, 0xb0, 0x2f, 0x80, 0x1f,
    0xf8, 0x2, 0xf8, 0x0, 0xfb, 0x5, 0xfc, 0xc0,
    0x5f, 0x50, 0xb, 0xe0, 0x8d, 0x6f, 0x8, 0xf1,
    0x0, 0x8f, 0x1c, 0x93, 0xf3, 0xbe, 0x0, 0x5,
    0xf4, 0xf5, 0xf, 0x7e, 0xb0, 0x0, 0x1f, 0xaf,
    0x20, 0xbc, 0xf7, 0x0, 0x0, 0xef, 0xe0, 0x7,
    0xff, 0x40, 0x0, 0xb, 0xfa, 0x0, 0x3f, 0xf1,
    0x0, 0x0, 0x7f, 0x60, 0x0, 0xfd, 0x0, 0x0,

    /* U+0058 "X" */
    0x6f, 0x90, 0x0, 0xbf, 0x40, 0xdf, 0x20, 0x4f,
    0xb0, 0x4, 0xfb, 0xd, 0xf2, 0x0, 0xb, 0xfa,
    0xf9, 0x0, 0x0, 0x2f, 0xff, 0x10, 0x0, 0x0,
    0xcf, 0xa0, 0x0, 0x0, 0x3f, 0xff, 0x10, 0x0,
    0xc, 0xf7, 0xfa, 0x0, 0x5, 0xf9, 0xc, 0xf3,
    0x0, 0xdf, 0x10, 0x3f, 0xc0, 0x7f, 0x80, 0x0,
    0xbf, 0x50,

    /* U+0059 "Y" */
    0xbf, 0x30, 0x0, 0xaf, 0x33, 0xfa, 0x0, 0x2f,
    0xb0, 0xc, 0xf2, 0x9, 0xf4, 0x0, 0x4f, 0x91,
    0xfc, 0x0, 0x0, 0xcf, 0x9f, 0x40, 0x0, 0x4,
    0xff, 0xd0, 0x0, 0x0, 0xd, 0xf5, 0x0, 0x0,
    0x0, 0x9f, 0x20, 0x0, 0x0, 0x9, 0xf2, 0x0,
    0x0, 0x0, 0x9f, 0x20, 0x0, 0x0, 0x9, 0xf2,
    0x0, 0x0,

    /* U+005A "Z" */
    0x6f, 0xff, 0xff, 0xfc, 0x37, 0x77, 0x7b, 0xf9,
    0x0, 0x0, 0xe, 0xe1, 0x0, 0x0, 0x8f, 0x50,
    0x0, 0x3, 0xfb, 0x0, 0x0, 0xc, 0xf2, 0x0,
    0x0, 0x6f, 0x80, 0x0, 0x1, 0xed, 0x0, 0x0,
    0xa, 0xf4, 0x0, 0x0, 0x4f, 0xe7, 0x77, 0x77,
    0x7f, 0xff, 0xff, 0xff,

    /* U+005B "[" */
    0x1, 0x11, 0x1f, 0xfb, 0x1f, 0xa3, 0x1f, 0x90,
    0x1f, 0x90, 0x1f, 0x90, 0x1f, 0x90, 0x1f, 0x90,
    0x1f, 0x90, 0x1f, 0x90, 0x1f, 0x90, 0x1f, 0x90,
    0x1f, 0x90, 0x1f, 0x91, 0x1f, 0xfb, 0x4, 0x43,

    /* U+005C "\\" */
    0xae, 0x0, 0x0, 0x5f, 0x50, 0x0, 0xe, 0xa0,
    0x0, 0x9, 0xf1, 0x0, 0x3, 0xf6, 0x0, 0x0,
    0xdc, 0x0, 0x0, 0x8f, 0x20, 0x0, 0x2f, 0x70,
    0x0, 0xc, 0xd0, 0x0, 0x6, 0xf3, 0x0, 0x1,
    0xf9, 0x0, 0x0, 0x66,

    /* U+005D "]" */
    0x11, 0x1e, 0xfe, 0x4d, 0xe0, 0xce, 0xc, 0xe0,
    0xce, 0xc, 0xe0, 0xce, 0xc, 0xe0, 0xce, 0xc,
    0xe0, 0xce, 0xc, 0xe1, 0xce, 0xef, 0xe4, 0x44,

    /* U+005E "^" */
    0x0, 0x55, 0x0, 0x0, 0xee, 0x0, 0x5, 0xff,
    0x50, 0xb, 0xab, 0xa0, 0x1f, 0x45, 0xf1, 0x7e,
    0x0, 0xe6,

    /* U+005F "_" */
    0x11, 0x11, 0x11, 0xf, 0xff, 0xff, 0xf4, 0x44,
    0x44, 0x44, 0x10,

    /* U+0060 "`" */
    0x3f, 0x90, 0x4, 0xf3,

    /* U+0061 "a" */
    0x3, 0xcf, 0xe8, 0x0, 0xed, 0x69, 0xf6, 0x15,
    0x20, 0xf, 0xa0, 0x3b, 0xef, 0xfb, 0x1f, 0xc3,
    0x2f, 0xb5, 0xf5, 0x0, 0xfb, 0x3f, 0xc7, 0xcf,
    0xb0, 0x6e, 0xe8, 0xdd,

    /* U+0062 "b" */
    0x2f, 0x80, 0x0, 0x0, 0x2f, 0x80, 0x0, 0x0,
    0x2f, 0x80, 0x0, 0x0, 0x2f, 0xac, 0xfc, 0x20,
    0x2f, 0xf9, 0x9f, 0xc0, 0x2f, 0x90, 0x9, 0xf2,
    0x2f, 0x80, 0x5, 0xf4, 0x2f, 0x80, 0x5, 0xf4,
    0x2f, 0x90, 0x9, 0xf2, 0x2f, 0xf9, 0x8f, 0xc0,
    0x2f, 0x8c, 0xfc, 0x20,

    /* U+0063 "c" */
    0x1, 0xbf, 0xe8, 0x0, 0xcf, 0x89, 0xf8, 0x3f,
    0x70, 0xb, 0xc6, 0xf3, 0x0, 0x0, 0x6f, 0x30,
    0x0, 0x3, 0xf6, 0x0, 0x89, 0xc, 0xf7, 0x9f,
    0x80, 0x1b, 0xfe, 0x80,

    /* U+0064 "d" */
    0x0, 0x0, 0xa, 0xf0, 0x0, 0x0, 0xa, 0xf0,
    0x0, 0x0, 0xa, 0xf0, 0x2, 0xcf, 0xbb, 0xf0,
    0xd, 0xf8, 0xaf, 0xf0, 0x4f, 0x80, 0xb, 0xf0,
    0x6f, 0x40, 0xa, 0xf0, 0x6f, 0x30, 0xa, 0xf0,
    0x3f, 0x60, 0xa, 0xf0, 0xd, 0xe6, 0x7f, 0xf0,
    0x2, 0xcf, 0xca, 0xf0,

    /* U+0065 "e" */
    0x0, 0x9f, 0xe9, 0x0, 0xb, 0xf7, 0x8f, 0x80,
    0x3f, 0x70, 0xa, 0xe0, 0x6f, 0xff, 0xff, 0xf0,
    0x6f, 0x73, 0x33, 0x30, 0x3f, 0x90, 0x1, 0x20,
    0xb, 0xf9, 0x7d, 0xb0, 0x1, 0xae, 0xfb, 0x20,

    /* U+0066 "f" */
    0x0, 0x9e, 0xe0, 0x6f, 0xb7, 0x8, 0xf1, 0xb,
    0xff, 0xf9, 0x3b, 0xf6, 0x20, 0x9f, 0x10, 0x9,
    0xf1, 0x0, 0x9f, 0x10, 0x9, 0xf1, 0x0, 0x9f,
    0x10, 0x9, 0xf1, 0x0,

    /* U+0067 "g" */
    0x2, 0xcf, 0xc9, 0xf1, 0xd, 0xf8, 0x9f, 0xf1,
    0x3f, 0x80, 0x9, 0xf1, 0x6f, 0x40, 0x9, 0xf1,
    0x5f, 0x40, 0x9, 0xf1, 0x3f, 0x80, 0xa, 0xf1,
    0xd, 0xf8, 0x9f, 0xf1, 0x2, 0xcf, 0xcb, 0xf1,
    0x1, 0x0, 0xb, 0xf0, 0xd, 0xc7, 0xaf, 0x80,
    0x3, 0xcf, 0xe8, 0x0,

    /* U+0068 "h" */
    0x2f, 0x70, 0x0, 0x2, 0xf7, 0x0, 0x0, 0x2f,
    0x70, 0x0, 0x2, 0xf9, 0xbf, 0xc2, 0x2f, 0xf9,
    0x9f, 0xb2, 0xf8, 0x0, 0xce, 0x2f, 0x70, 0xb,
    0xf2, 0xf7, 0x0, 0xbf, 0x2f, 0x70, 0xb, 0xf2,
    0xf7, 0x0, 0xbf, 0x2f, 0x70, 0xb, 0xf0,

    /* U+0069 "i" */
    0xe, 0x80, 0xc6, 0x0, 0x0, 0xfa, 0xf, 0xa0,
    0xfa, 0xf, 0xa0, 0xfa, 0xf, 0xa0, 0xfa, 0xf,
    0xa0,

    /* U+006A "j" */
    0x1, 0xe7, 0x0, 0xc5, 0x0, 0x0, 0x1, 0xf9,
    0x1, 0xf9, 0x1, 0xf9, 0x1, 0xf9, 0x1, 0xf9,
    0x1, 0xf9, 0x1, 0xf9, 0x1, 0xf9, 0x1, 0xf9,
    0x4a, 0xf6, 0x7f, 0xb0,

    /* U+006B "k" */
    0x2f, 0x80, 0x0, 0x0, 0x2f, 0x80, 0x0, 0x0,
    0x2f, 0x80, 0x0, 0x0, 0x2f, 0x80, 0x5f, 0xa0,
    0x2f, 0x83, 0xfc, 0x0, 0x2f, 0x9e, 0xe1, 0x0,
    0x2f, 0xff, 0x80, 0x0, 0x2f, 0xfd, 0xf2, 0x0,
    0x2f, 0x92, 0xfb, 0x0, 0x2f, 0x80, 0x8f, 0x60,
    0x2f, 0x80, 0xd, 0xf1,

    /* U+006C "l" */
    0xf, 0xa0, 0xfa, 0xf, 0xa0, 0xfa, 0xf, 0xa0,
    0xfa, 0xf, 0xa0, 0xfa, 0xf, 0xa0, 0xfa, 0xf,
    0xa0,

    /* U+006D "m" */
    0x2f, 0x9b, 0xfd, 0x29, 0xfe, 0x60, 0x2f, 0xf8,
    0x9f, 0xfb, 0x7d, 0xf1, 0x2f, 0x80, 0xd, 0xf0,
    0x6, 0xf4, 0x2f, 0x80, 0xc, 0xe0, 0x5, 0xf5,
    0x2f, 0x80, 0xc, 0xe0, 0x5, 0xf5, 0x2f, 0x80,
    0xc, 0xe0, 0x5, 0xf5, 0x2f, 0x80, 0xc, 0xe0,
    0x5, 0xf5, 0x2f, 0x80, 0xc, 0xe0, 0x5, 0xf5,

    /* U+006E "n" */
    0x2f, 0x8c, 0xfc, 0x22, 0xff, 0x99, 0xfb, 0x2f,
    0x80, 0xc, 0xe2, 0xf7, 0x0, 0xbf, 0x2f, 0x70,
    0xb, 0xf2, 0xf7, 0x0, 0xbf, 0x2f, 0x70, 0xb,
    0xf2, 0xf7, 0x0, 0xbf,

    /* U+006F "o" */
    0x1, 0xaf, 0xfa, 0x0, 0xc, 0xf8, 0x8f, 0xb0,
    0x3f, 0x70, 0x8, 0xf2, 0x6f, 0x40, 0x4, 0xf5,
    0x6f, 0x40, 0x4, 0xf6, 0x3f, 0x70, 0x8, 0xf3,
    0xb, 0xf8, 0x8f, 0xc0, 0x1, 0xaf, 0xea, 0x10,

    /* U+0070 "p" */
    0x2f, 0xac, 0xfc, 0x20, 0x2f, 0xf6, 0x7f, 0xc0,
    0x2f, 0x80, 0x9, 0xf2, 0x2f, 0x80, 0x5, 0xf4,
    0x2f, 0x80, 0x6, 0xf4, 0x2f, 0x80, 0x9, 0xf2,
    0x2f, 0xf8, 0x8f, 0xc0, 0x2f, 0xac, 0xfc, 0x20,
    0x2f, 0x80, 0x0, 0x0, 0x2f, 0x80, 0x0, 0x0,
    0x2f, 0x80, 0x0, 0x0,

    /* U+0071 "q" */
    0x3, 0xcf, 0xba, 0xf0, 0xd, 0xf8, 0x9f, 0xf0,
    0x4f, 0x70, 0xa, 0xf0, 0x6f, 0x40, 0xa, 0xf0,
    0x6f, 0x30, 0xa, 0xf0, 0x3f, 0x70, 0xa, 0xf0,
    0xd, 0xf8, 0x9f, 0xf0, 0x2, 0xcf, 0xbc, 0xf0,
    0x0, 0x0, 0xa, 0xf0, 0x0, 0x0, 0xa, 0xf0,
    0x0, 0x0, 0xa, 0xf0,

    /* U+0072 "r" */
    0x0, 0x0, 0x2, 0xfa, 0xdb, 0x2f, 0xfb, 0x62,
    0xf9, 0x0, 0x2f, 0x80, 0x2, 0xf8, 0x0, 0x2f,
    0x80, 0x2, 0xf8, 0x0, 0x2f, 0x80, 0x0,

    /* U+0073 "s" */
    0x3, 0xcf, 0xd6, 0x0, 0xfc, 0x5a, 0xf4, 0x3f,
    0x70, 0x7, 0x30, 0xcf, 0xc8, 0x20, 0x0, 0x5a,
    0xff, 0x34, 0x91, 0x1, 0xf9, 0x3f, 0xb5, 0x8f,
    0x60, 0x5d, 0xfe, 0x70,

    /* U+0074 "t" */
    0xb, 0xf0, 0x0, 0xbf, 0x0, 0xff, 0xff, 0x34,
    0xdf, 0x51, 0xb, 0xf0, 0x0, 0xbf, 0x0, 0xb,
    0xf0, 0x0, 0xbf, 0x0, 0xa, 0xf8, 0x20, 0x2d,
    0xf3,

    /* U+0075 "u" */
    0x3f, 0x70, 0xb, 0xf3, 0xf7, 0x0, 0xbf, 0x3f,
    0x70, 0xb, 0xf3, 0xf7, 0x0, 0xbf, 0x3f, 0x70,
    0xb, 0xf2, 0xf8, 0x0, 0xcf, 0xe, 0xe7, 0xaf,
    0xf0, 0x4d, 0xfa, 0xbf,

    /* U+0076 "v" */
    0xaf, 0x0, 0x1f, 0x95, 0xf4, 0x6, 0xf4, 0xf,
    0x90, 0xae, 0x0, 0xbd, 0xe, 0x90, 0x6, 0xf5,
    0xf4, 0x0, 0x1f, 0xef, 0x0, 0x0, 0xcf, 0xa0,
    0x0, 0x6, 0xf5, 0x0,

    /* U+0077 "w" */
    0xaf, 0x0, 0x9e, 0x0, 0x9f, 0x6, 0xf2, 0xd,
    0xf3, 0xc, 0xc0, 0x2f, 0x62, 0xfe, 0x80, 0xf8,
    0x0, 0xe9, 0x6e, 0x8c, 0x3f, 0x40, 0xa, 0xda,
    0x94, 0xf8, 0xf0, 0x0, 0x6f, 0xf5, 0xf, 0xfc,
    0x0, 0x2, 0xff, 0x0, 0xaf, 0x80, 0x0, 0xe,
    0xc0, 0x6, 0xf4, 0x0,

    /* U+0078 "x" */
    0x6f, 0x60, 0x5f, 0x70, 0xde, 0xd, 0xd0, 0x4,
    0xfc, 0xf5, 0x0, 0xb, 0xfc, 0x0, 0x0, 0xcf,
    0xc0, 0x0, 0x5f, 0xbf, 0x60, 0xe, 0xd0, 0xce,
    0x7, 0xf5, 0x4, 0xf8,

    /* U+0079 "y" */
    0xcf, 0x0, 0x3f, 0x86, 0xf5, 0x7, 0xf3, 0x1f,
    0x90, 0xce, 0x0, 0xce, 0x1f, 0x90, 0x6, 0xf8,
    0xf4, 0x0, 0x1f, 0xfe, 0x0, 0x0, 0xbf, 0x90,
    0x0, 0x6, 0xf4, 0x0, 0x0, 0x9e, 0x0, 0x2,
    0x9f, 0x80, 0x0, 0x4f, 0xb0, 0x0, 0x0,

    /* U+007A "z" */
    0x6f, 0xff, 0xff, 0x62, 0x66, 0x6e, 0xf2, 0x0,
    0x6, 0xf7, 0x0, 0x2, 0xfc, 0x0, 0x0, 0xcf,
    0x20, 0x0, 0x8f, 0x60, 0x0, 0x3f, 0xe6, 0x66,
    0x37, 0xff, 0xff, 0xf9,

    /* U+007B "{" */
    0x0, 0x3, 0x10, 0x7, 0xf4, 0x1, 0xf8, 0x0,
    0x4f, 0x40, 0x4, 0xf4, 0x0, 0x5f, 0x30, 0x1a,
    0xf0, 0x9, 0xf6, 0x0, 0x2c, 0xe0, 0x0, 0x5f,
    0x30, 0x4, 0xf4, 0x0, 0x4f, 0x40, 0x1, 0xf7,
    0x0, 0x9, 0xe3, 0x0, 0x6, 0x20,

    /* U+007C "|" */
    0xd5, 0xd5, 0xd5, 0xd5, 0xd5, 0xd5, 0xd5, 0xd5,
    0xd5, 0xd5, 0xd5, 0xd5, 0x62,

    /* U+007D "}" */
    0x31, 0x0, 0x9, 0xe3, 0x0, 0xd, 0xb0, 0x0,
    0x9e, 0x0, 0x9, 0xf0, 0x0, 0x8f, 0x0, 0x5,
    0xf6, 0x0, 0xb, 0xf4, 0x3, 0xf9, 0x10, 0x8f,
    0x0, 0x9, 0xf0, 0x0, 0x9e, 0x0, 0xc, 0xc0,
    0x7, 0xf4, 0x0, 0x53, 0x0, 0x0,

    /* U+007E "~" */
    0x0, 0x1, 0x0, 0x1, 0x10, 0x4f, 0xf7, 0x0,
    0xd6, 0xe, 0xb7, 0xf8, 0x5f, 0x32, 0xf3, 0x6,
    0xff, 0xa0, 0x0, 0x0, 0x1, 0x30, 0x0,

    /* U+00B0 "°" */
    0x5, 0xd9, 0x0, 0xe3, 0xb5, 0xe, 0xa, 0x60,
    0x8f, 0xc0, 0x0, 0x0, 0x0,

    /* U+2022 "•" */
    0x1, 0x51, 0xe, 0xfc, 0xf, 0xff, 0xa, 0xf8,

    /* U+E1BA "" */
    0x0, 0x0, 0x1, 0x33, 0x10, 0x0, 0x0, 0x0,
    0x39, 0xef, 0xff, 0xfe, 0x93, 0x0, 0x2b, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xb2, 0x6f, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf6, 0xa, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xa0, 0x0, 0xdf, 0xff, 0xff, 0xff,
    0xfd, 0x0, 0x0, 0x2e, 0xff, 0xff, 0xff, 0xe2,
    0x0, 0x0, 0x4, 0xff, 0xff, 0xff, 0x40, 0x0,
    0x0, 0x0, 0x7f, 0xff, 0xf6, 0x0, 0x0, 0x0,
    0x0, 0xa, 0xff, 0xa0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0xcc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x11, 0x0, 0x0, 0x0,

    /* U+E1DA "" */
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9,
    0x90, 0x2, 0x33, 0x10, 0x0, 0x0, 0x1, 0xe9,
    0x1d, 0xff, 0xfe, 0x93, 0x0, 0x2c, 0xff, 0x91,
    0xdf, 0xff, 0xff, 0xb2, 0x6f, 0xff, 0xf9, 0x1d,
    0xff, 0xff, 0xf6, 0xa, 0xff, 0xff, 0x91, 0xdf,
    0xff, 0xa0, 0x0, 0xcf, 0xff, 0xf9, 0x1d, 0xfc,
    0x0, 0x0, 0x1e, 0xff, 0xff, 0x91, 0xc1, 0x0,
    0x0, 0x3, 0xff, 0xff, 0xf9, 0x0, 0x0, 0x0,
    0x0, 0x6f, 0xff, 0xfe, 0x90, 0x0, 0x0, 0x0,
    0x9, 0xff, 0x91, 0xd8, 0x0, 0x0, 0x0, 0x0,
    0xcc, 0x0, 0x15, 0x0, 0x0, 0x0, 0x0, 0x11,
    0x0, 0x0, 0x0,

    /* U+E328 "" */
    0x0, 0x0, 0x0, 0x1, 0x31, 0x0, 0x0, 0x0,
    0x0, 0x9a, 0x8a, 0xa1, 0x0, 0x0, 0x0, 0x49,
    0xba, 0x41, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0,
    0x0, 0x0, 0x0, 0x1, 0xf1, 0x0, 0x0, 0x0,
    0x0, 0x1, 0xf1, 0x0, 0x5, 0x9a, 0xaa, 0xaa,
    0xfa, 0x80, 0xf, 0xff, 0xff, 0xff, 0xff, 0xf6,
    0x1f, 0xb2, 0xe2, 0xd3, 0xff, 0xf6, 0x1f, 0xeb,
    0xfb, 0xfb, 0xff, 0xf6, 0xc, 0xff, 0xff, 0xff,
    0xff, 0xf3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 56, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 0, .adv_w = 60, .box_w = 3, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 17, .adv_w = 73, .box_w = 4, .box_h = 4, .ofs_x = 0, .ofs_y = 7},
    {.bitmap_index = 25, .adv_w = 137, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 75, .adv_w = 127, .box_w = 8, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 131, .adv_w = 165, .box_w = 10, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 186, .adv_w = 143, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 236, .adv_w = 38, .box_w = 2, .box_h = 4, .ofs_x = 0, .ofs_y = 7},
    {.bitmap_index = 240, .adv_w = 78, .box_w = 5, .box_h = 16, .ofs_x = 0, .ofs_y = -4},
    {.bitmap_index = 280, .adv_w = 79, .box_w = 5, .box_h = 16, .ofs_x = 0, .ofs_y = -4},
    {.bitmap_index = 320, .adv_w = 99, .box_w = 7, .box_h = 7, .ofs_x = 0, .ofs_y = 4},
    {.bitmap_index = 345, .adv_w = 125, .box_w = 8, .box_h = 8, .ofs_x = 0, .ofs_y = 1},
    {.bitmap_index = 377, .adv_w = 49, .box_w = 3, .box_h = 5, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 385, .adv_w = 74, .box_w = 5, .box_h = 3, .ofs_x = 0, .ofs_y = 3},
    {.bitmap_index = 393, .adv_w = 63, .box_w = 3, .box_h = 2, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 396, .adv_w = 89, .box_w = 6, .box_h = 12, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 432, .adv_w = 127, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 476, .adv_w = 127, .box_w = 5, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 504, .adv_w = 127, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 548, .adv_w = 127, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 592, .adv_w = 127, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 636, .adv_w = 127, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 680, .adv_w = 127, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 724, .adv_w = 127, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 768, .adv_w = 127, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 812, .adv_w = 127, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 856, .adv_w = 59, .box_w = 3, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 868, .adv_w = 53, .box_w = 3, .box_h = 11, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 885, .adv_w = 114, .box_w = 7, .box_h = 7, .ofs_x = 0, .ofs_y = 1},
    {.bitmap_index = 910, .adv_w = 125, .box_w = 7, .box_h = 6, .ofs_x = 0, .ofs_y = 2},
    {.bitmap_index = 931, .adv_w = 117, .box_w = 7, .box_h = 7, .ofs_x = 0, .ofs_y = 1},
    {.bitmap_index = 956, .adv_w = 109, .box_w = 7, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 995, .adv_w = 200, .box_w = 12, .box_h = 14, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 1079, .adv_w = 149, .box_w = 10, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1134, .adv_w = 141, .box_w = 8, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1178, .adv_w = 146, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1228, .adv_w = 146, .box_w = 8, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1272, .adv_w = 127, .box_w = 7, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1311, .adv_w = 123, .box_w = 7, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1350, .adv_w = 152, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1400, .adv_w = 159, .box_w = 8, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1444, .adv_w = 63, .box_w = 2, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1455, .adv_w = 124, .box_w = 7, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1494, .adv_w = 141, .box_w = 8, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1538, .adv_w = 121, .box_w = 7, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1577, .adv_w = 196, .box_w = 11, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1638, .adv_w = 159, .box_w = 8, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1682, .adv_w = 155, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1732, .adv_w = 143, .box_w = 8, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1776, .adv_w = 155, .box_w = 9, .box_h = 13, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 1835, .adv_w = 140, .box_w = 8, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1879, .adv_w = 135, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1923, .adv_w = 136, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1973, .adv_w = 146, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2023, .adv_w = 145, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2073, .adv_w = 197, .box_w = 13, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2145, .adv_w = 142, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2195, .adv_w = 137, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2245, .adv_w = 135, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2289, .adv_w = 61, .box_w = 4, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 2321, .adv_w = 94, .box_w = 6, .box_h = 12, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 2357, .adv_w = 61, .box_w = 3, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 2381, .adv_w = 96, .box_w = 6, .box_h = 6, .ofs_x = 0, .ofs_y = 5},
    {.bitmap_index = 2399, .adv_w = 101, .box_w = 7, .box_h = 3, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 2410, .adv_w = 72, .box_w = 4, .box_h = 2, .ofs_x = 0, .ofs_y = 9},
    {.bitmap_index = 2414, .adv_w = 121, .box_w = 7, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2442, .adv_w = 126, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2486, .adv_w = 117, .box_w = 7, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2514, .adv_w = 126, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2558, .adv_w = 120, .box_w = 8, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2590, .adv_w = 79, .box_w = 5, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2618, .adv_w = 127, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 2662, .adv_w = 124, .box_w = 7, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2701, .adv_w = 57, .box_w = 3, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2718, .adv_w = 56, .box_w = 4, .box_h = 14, .ofs_x = -1, .ofs_y = -3},
    {.bitmap_index = 2746, .adv_w = 117, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2790, .adv_w = 57, .box_w = 3, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2807, .adv_w = 195, .box_w = 12, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2855, .adv_w = 125, .box_w = 7, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2883, .adv_w = 128, .box_w = 8, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2915, .adv_w = 126, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 2959, .adv_w = 127, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 3003, .adv_w = 79, .box_w = 5, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3026, .adv_w = 116, .box_w = 7, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3054, .adv_w = 74, .box_w = 5, .box_h = 10, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3079, .adv_w = 124, .box_w = 7, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3107, .adv_w = 111, .box_w = 7, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3135, .adv_w = 166, .box_w = 11, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3179, .adv_w = 113, .box_w = 7, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3207, .adv_w = 109, .box_w = 7, .box_h = 11, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 3246, .adv_w = 113, .box_w = 7, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 3274, .adv_w = 75, .box_w = 5, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 3312, .adv_w = 56, .box_w = 2, .box_h = 13, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 3325, .adv_w = 75, .box_w = 5, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 3363, .adv_w = 149, .box_w = 9, .box_h = 5, .ofs_x = 0, .ofs_y = 2},
    {.bitmap_index = 3386, .adv_w = 85, .box_w = 5, .box_h = 5, .ofs_x = 0, .ofs_y = 6},
    {.bitmap_index = 3399, .adv_w = 78, .box_w = 4, .box_h = 4, .ofs_x = 0, .ofs_y = 4},
    {.bitmap_index = 3407, .adv_w = 224, .box_w = 14, .box_h = 12, .ofs_x = 0, .ofs_y = 1},
    {.bitmap_index = 3491, .adv_w = 224, .box_w = 14, .box_h = 13, .ofs_x = 0, .ofs_y = 1},
    {.bitmap_index = 3582, .adv_w = 224, .box_w = 12, .box_h = 12, .ofs_x = 1, .ofs_y = 1}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/

static const uint16_t unicode_list_1[] = {
    0x0, 0x1f72, 0xe10a, 0xe12a, 0xe278
};

/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps[] =
{
    {
        .range_start = 32, .range_length = 95, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    },
    {
        .range_start = 176, .range_length = 57977, .glyph_id_start = 96,
        .unicode_list = unicode_list_1, .glyph_id_ofs_list = NULL, .list_length = 5, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
    }
};

/*-----------------
 *    KERNING
 *----------------*/


/*Map glyph_ids to kern left classes*/
static const uint8_t kern_left_class_mapping[] =
{
    0, 1, 0, 2, 0, 0, 0, 0,
    2, 3, 0, 0, 0, 4, 0, 4,
    5, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 6, 7, 8, 9, 10, 11,
    0, 12, 12, 13, 14, 15, 12, 12,
    9, 16, 17, 18, 0, 19, 13, 20,
    21, 22, 23, 24, 25, 0, 0, 0,
    0, 0, 26, 27, 28, 0, 29, 30,
    0, 31, 0, 0, 32, 0, 31, 31,
    33, 27, 0, 34, 0, 35, 0, 36,
    37, 38, 36, 39, 40, 0, 0, 0,
    0, 0, 0, 0, 0
};

/*Map glyph_ids to kern right classes*/
static const uint8_t kern_right_class_mapping[] =
{
    0, 1, 0, 2, 0, 0, 0, 3,
    2, 0, 4, 5, 0, 6, 7, 6,
    8, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    9, 0, 10, 0, 11, 0, 0, 0,
    11, 0, 0, 12, 0, 0, 0, 0,
    11, 0, 11, 0, 13, 14, 15, 16,
    17, 18, 19, 20, 0, 0, 21, 0,
    0, 0, 22, 0, 23, 23, 23, 24,
    23, 0, 0, 0, 0, 0, 25, 25,
    26, 25, 23, 27, 28, 29, 30, 31,
    32, 33, 31, 34, 0, 0, 35, 0,
    0, 36, 0, 0, 0
};

/*Kern values between classes*/
static const int8_t kern_class_values[] =
{
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -7, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -4, 0, 0,
    0, 0, 0, 0, 0, -13, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, -5, -6, 0, -2, -10, 0, -10,
    0, 0, 0, 1, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 2,
    4, 0, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -31, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, -27,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -13, 0, 0,
    0, 0, 0, 0, -9, 0, -2, 0,
    0, -13, -2, -8, -4, 0, -16, 0,
    0, 0, 0, 0, -5, -1, 0, 0,
    -2, -1, -5, -4, 0, 1, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -3, 0, -3,
    0, 0, -6, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, -3,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, -3, 0, 0, 0, 0, 0, 0,
    -1, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, -2, 0,
    0, 0, 0, 0, 0, -13, 0, 0,
    0, -2, 0, 0, 0, -9, 0, -2,
    0, -2, -5, -3, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 2, 0, 0, 0, 0, 0, 0,
    0, 0, -2, -2, 0, -2, 0, 0,
    0, -2, -3, -2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -30, 0, 0,
    0, -21, 0, -23, 0, 2, 0, 0,
    0, 0, 0, 0, 0, -4, -2, 0,
    0, -2, -3, 0, 0, -2, -3, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 2, 0, 0,
    0, -3, 0, 0, 0, 2, -3, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, -2, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, -18, 0, 0, 0, -3, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, -3, 0, 0, -3, 0, 0,
    0, -3, -4, -7, 0, 0, 0, 0,
    0, -31, 0, 0, 0, 0, 0, 0,
    0, 2, -7, 0, 0, -22, -3, -23,
    -10, 0, -31, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -2, -13, -6,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, -44, 0, 0, 0, -19, 0, -20,
    0, 0, 0, 0, 0, -6, 0, -4,
    0, -1, -1, 0, 0, -1, 0, 0,
    2, 0, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -4, 0, -3,
    -2, 0, -4, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, -5, 0, -2, 0, 0, -5, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    -7, 0, 0, 0, 0, -28, -30, 0,
    0, -13, -3, -24, -2, 2, 0, 2,
    2, 0, 2, 0, 0, -18, -10, 0,
    -10, -23, -7, -8, 0, -7, -9, -5,
    -8, -7, 0, 0, 0, 0, 0, 2,
    0, -24, -17, 0, 0, -8, -1, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    2, -5, -5, 0, 0, -5, -3, 0,
    0, -3, -1, 0, 0, 0, 2, 0,
    0, 0, 0, 2, 0, -16, -7, 0,
    0, -5, 0, 0, 0, 2, 0, 0,
    0, 0, 0, 0, 1, -4, -3, 0,
    0, -3, -2, 0, 0, -2, 0, 0,
    0, 0, 2, 0, 0, 0, 0, 0,
    0, 0, -17, 0, 0, 0, -3, 0,
    0, 0, 0, 2, 0, 0, 0, 0,
    0, 0, -3, 0, 0, -2, 0, 0,
    0, -2, -3, 0, 0, 0, 0, 0,
    0, 0, -3, 2, -5, -25, -17, 0,
    0, -16, -3, -10, -2, 2, -10, 2,
    2, 1, 2, 0, 2, -7, -7, -2,
    -4, -7, -4, -6, -2, -4, -2, 0,
    -3, -3, 2, -5, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 1, -3, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, -2, 0, 0, -2, 0, 0,
    0, -2, -3, -3, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, -2, 0, 0, -2, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -2, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, -2, 0, 0, 0, 0, 0,
    0, -3, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, -1, 0,
    -2, -2, 0, 0, 0, -1, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, -2, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, -1, 0,
    0, 0, 0, 0, 0, 2, 0, 2,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    2, 0, -3, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 2, 0,
    0, -9, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, -2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, -10, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, -2, 0,
    -2, -2, 0, 0, 0, 2, 0, 0,
    0, -19, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, -3, -2, 2, 0, -4, 0, 0,
    5, 0, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, -3, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 2, 0, 0,
    0, -18, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, -2, -1, 1, 0, -2, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -14, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, -2, 0, 0, -4, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, -2, 0,
    0, -2, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, -2,
    0, 0, -2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0
};


/*Collect the kern class' data in one place*/
static const lv_font_fmt_txt_kern_classes_t kern_classes =
{
    .class_pair_values   = kern_class_values,
    .left_class_mapping  = kern_left_class_mapping,
    .right_class_mapping = kern_right_class_mapping,
    .left_class_cnt      = 40,
    .right_class_cnt     = 36,
};

/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

#if LV_VERSION_CHECK(8, 0, 0)
/*Store all the custom data of the font*/
static  lv_font_fmt_txt_glyph_cache_t cache;
static const lv_font_fmt_txt_dsc_t font_dsc = {
#else
static lv_font_fmt_txt_dsc_t font_dsc = {
#endif
    .glyph_bitmap = glyph_bitmap,
    .glyph_dsc = glyph_dsc,
    .cmaps = cmaps,
    .kern_dsc = &kern_classes,
    .kern_scale = 16,
    .cmap_num = 2,
    .bpp = 4,
    .kern_classes = 1,
    .bitmap_format = 0,
#if LV_VERSION_CHECK(8, 0, 0)
    .cache = &cache
#endif
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
#if LV_VERSION_CHECK(8, 0, 0)
const lv_font_t main_font_14 = {
#else
lv_font_t main_font_14 = {
#endif
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 18,          /*The maximum line height required by the font*/
    .base_line = 4,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0)
    .underline_position = -1,
    .underline_thickness = 1,
#endif
    .dsc = &font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};



#endif /*#if MAIN_FONT_14*/

